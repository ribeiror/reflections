When would you want to create a remote repository rather then keeping all your work locally?
I would create a remote repository to share with others or to make available to myself but with access from another computer

Why might you want to always pull changes manually rather having Git automatically stay up-to-date with your remote repository?
Push command operates on branches, so in order to have control about what to pulling, it's preferable to pull changes manually

Describe the differences between forks, clones, and branches. When would you use one instead of another?
forks and clones are operations related to having a copy of a git repository. With fork command you are getting your own copy
and managing your own version. Fork it's not part-of git, it's part-of github, and is useful when you don't have permissions
to operate over an existing repository.
Clone is a operation that enable you to work locally then push your changes to the remote repository which was cloned.
Branches are pointers to commits that make it easy to handle or choose about what branch to pull or push.

What is the benefit of having a copy of the last known state of the remote stored locally?
With a copy you can compare both and solve conflicts

How would you collaborate without using Git or Github? What would be easier,
and what would be harder?
Git and Github in my opinion allows two things:
- collaborative work and communication.
Collaborative work without Git means applying more than one tool to achieve
a goal in a collaborative manner, the easier would for example to share and
receive a copy of the work through email, the harder would be merge different
versions and analyze changes manually.
GitHub has interesting concepts like fork, pull request and collaborators,
and collaborate work without GitHub means to manage on your own. The easier
thing would be flexibility to design your own solution and the harder would be
to managing it.
